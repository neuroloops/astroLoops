---
import { logo_text, github, emailSvg } from '../assets/navbar'
const globals = await Astro.glob('../content/global/global.md')
const encEmail = globals[0].frontmatter.email
const email = atob(encEmail)

const uniqueLinks = [...new Set(globals.map((link) => link.frontmatter.links).flat())]
---

{/* because of sticky, need a fake div to be able to scroll to the top element */}

<div id="navBar"></div>
<div class="scrollbar-hide sticky top-0 z-30 w-screen gap-10 overflow-x-clip text-white">
	<div
		class="h-20 flex items-center justify-between bg-navBg-init px-6 font-bold md:justify-evenly md:px-0"
		id="navBar-ctn"
	>
		<img src={logo_text.src} alt="Logo" class="cursor-pointer" />

		{/* burger menu */}
		<div class="cursor-pointer md:hidden" id="openMenu">
			<div class="space-y-2">
				<div class="h-0.5 w-8 bg-white"></div>
				<div class="h-0.5 w-8 bg-white"></div>
				<div class="h-0.5 w-8 bg-white"></div>
			</div>
		</div>

		{/* show real nav when screen is medium size */}
		<nav class="hidden md:block">
			<ul class="flex gap-10 text-sm">
				<!-- <NavLink /> -->
				{
					uniqueLinks.map((item) => (
						<li>
							<a href={item.path} class="link">
								{item.name}
							</a>
						</li>
					))
				}
			</ul>
		</nav>
		<div class="mr-3 hidden cursor-pointer items-center lg:inline-flex">
			<img src={emailSvg.src} alt="email logo" class="ml-3 mr-3" />
			<a href={`mailto:${email}`}>{email}</a>
			<img class="ml-3 mr-3" src={github.src} alt="github logo" />
		</div>
	</div>
</div>

<script>
	import { isOpen } from '../store.js'

	const openMenu = () => {
		isOpen.set(true)
	}

	const IdOpenMenu = document.getElementById('openMenu') || null
	// Add an event listener to the button

	if (IdOpenMenu instanceof HTMLElement) {
		IdOpenMenu.addEventListener('click', openMenu)
	}

	type Link = Element & {
		hash?: string
	}

	const links = document.querySelectorAll('a.link')

	links.forEach((link: Link) => {
		link.addEventListener('click', (e) => {
			e.preventDefault()

			const toLink = document.querySelector(link.hash || '')
			toLink?.scrollIntoView({
				behavior: 'smooth',
				block: 'start'
			})
		})
	})

	const navBar = document.getElementById('navBar-ctn') || null
	if (navBar instanceof HTMLElement) {
		const changeBackground = () => {
			navBar.style.backgroundColor = window.scrollY != 0 ? '#02023d' : '#02025e'
		}
		changeBackground()
		window.addEventListener('scroll', changeBackground)
	}
</script>
